// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models

enum ItemType {
  LEGENDARY
  BOOTS
}

model AppMetadata {
  key     String   @id         // e.g. "ddragonVersion"
  value   String
  updatedAt DateTime @updatedAt

  @@map("app_metadata")
}

model Item {
  id     String @id @default(dbgenerated())
  name    String
  iconUrl   String
  type     ItemType
}

model Champion {
  id    String  @id @default(dbgenerated())
  iconUrl     String
}

model Rune {
  id        String   @id @default(dbgenerated())
  name      String
  iconUrl   String
  treeId    String
  tree      RuneTree @relation(fields: [treeId], references: [id])
}

model RuneTree {
  id        String  @id @default(dbgenerated())
  name      String
  iconUrl   String
  runes     Rune[]
}

model Spell {
  id      String  @id @default(dbgenerated())
  name    String
  iconUrl   String
}

// --- Account Model ---
model Account {
  id          String    @id @default(uuid())  // unique ID (e.g. puuid or internal UUID)
  name        String
  tag         String
  lastFetched DateTime? // timestamp of last game fetch (nullable if never fetched)
  createdAt   DateTime  @default(now())

  @@map("accounts")
}